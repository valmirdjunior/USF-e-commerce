package br.com.dpaulla.mail.server.controller.impl;

import java.io.FileOutputStream;
import java.util.concurrent.ExecutorService;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.context.request.async.DeferredResult;

import br.com.crb.mercury.api.model.mail.AntennaWrapper;
import br.com.crb.mercury.api.model.mail.MailResponse;
import br.com.crb.mercury.mail.server.utils.MailMessageUtil;
import br.com.crb.mercury.mail.server.utils.MailWrapper;
import br.com.dpaulla.mail.server.controller.MainController;
import br.com.dpaulla.mail.server.service.MailgunMailService;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@RestController
@RequestMapping(value = "/antenna/mail")
public class AntennaController extends MainController<AntennaWrapper>{
	private ExecutorService executor;
	
	private MailMessageUtil mailMessage;
	
	@Autowired
	public AntennaController(ExecutorService executor, 
			MailgunMailService mailgunMailService, MailMessageUtil mailMessage) {
		super(mailgunMailService);
		this.executor = executor;
		this.mailMessage = mailMessage;
	}

	@RequestMapping(method = RequestMethod.POST, consumes = MediaType.APPLICATION_JSON_VALUE, produces =  MediaType.APPLICATION_JSON_VALUE)
	public DeferredResult<ResponseEntity<MailResponse>> antenna(@RequestBody AntennaWrapper antenna){
		DeferredResult<ResponseEntity<MailResponse>> response = new DeferredResult<ResponseEntity<MailResponse>>();
		log.info("Received request. User -> {}", antenna);
		executor.submit(sendMail(response, antenna));
		return response;	
	}
	
	@Override
	protected String okMessage(AntennaWrapper request) {
		return String.format("Email enviado com sucesso para o email: crbsistemas@rotadasbandeiras.com.br");
	}

	@Override
	protected String errorMessage(AntennaWrapper request) {
		return String.format("Erro ao tentar enviar email para o email: crbsistemas@rotadasbandeiras.com.br ");
	}

	@Override
	protected MailWrapper buildMessage(AntennaWrapper object) {
		FileOutputStream fos = object.getFos();
		return mailMessage.buildAntennaMessage(fos);
	}
	

}
